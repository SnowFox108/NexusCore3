<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="WebsiteRequiredName" xml:space="preserve">
    <value>Please enter a website name</value>
  </data>
  <data name="GeneralMaximum500" xml:space="preserve">
    <value>You can enter maximum 500 characters</value>
  </data>
  <data name="ClientRequiredName" xml:space="preserve">
    <value>Please enter a client name</value>
  </data>
  <data name="ClientDepartmentRequiredName" xml:space="preserve">
    <value>Please enter a department name</value>
  </data>
  <data name="ClientDepartmentRequiredContactTitle" xml:space="preserve">
    <value>Please select a contact person title</value>
  </data>
  <data name="ClientDepartmentRequiredContactFirstName" xml:space="preserve">
    <value>Please enter a contact person firstname</value>
  </data>
  <data name="ClientDepartmentRequiredContactLastName" xml:space="preserve">
    <value>Please enter a contact person lastname</value>
  </data>
  <data name="ClientDepartmentRequiredContactPhoneNumber" xml:space="preserve">
    <value>Please enter a contact person phone</value>
  </data>
  <data name="ClientDepartmentRequiredContactEmail" xml:space="preserve">
    <value>Please enter a contact person email</value>
  </data>
  <data name="DomainRequiredName" xml:space="preserve">
    <value>Please enter a domain name</value>
  </data>
  <data name="GeneralRequiredTitle" xml:space="preserve">
    <value>Please select a title</value>
  </data>
  <data name="GeneralRequiredEmail" xml:space="preserve">
    <value>Please enter a email address</value>
  </data>
  <data name="GeneralRequiredValidEmail" xml:space="preserve">
    <value>Please enter a valid email address</value>
  </data>
  <data name="GeneralRequiredFirstname" xml:space="preserve">
    <value>Please enter a firstname</value>
  </data>
  <data name="GeneralRequiredLastname" xml:space="preserve">
    <value>Please enter a lastname</value>
  </data>
  <data name="GeneralComparePassword" xml:space="preserve">
    <value>The new password and confirmation password do not match.</value>
  </data>
  <data name="GeneralDisplayConfirmPassword" xml:space="preserve">
    <value>Confirm Passowrd</value>
  </data>
  <data name="GeneralValidationNewPassword" xml:space="preserve">
    <value>The password must be at least 8 characters long, and at least 1 number</value>
  </data>
  <data name="GeneralRequiredNewPassword" xml:space="preserve">
    <value>Please enter a new password.</value>
  </data>
  <data name="GeneralDisplayEmail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="GeneralDisplayFirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="GeneralDisplayLastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="GeneralDisplayPhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="GeneralDisplayTitle" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="GeneralDisplayDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="MembershipDisplayRoleName" xml:space="preserve">
    <value>Role Name</value>
  </data>
  <data name="MembershipRequiredRoleName" xml:space="preserve">
    <value>Please enter a role name</value>
  </data>
  <data name="ClientDepartmentDisplayName" xml:space="preserve">
    <value>Department Name</value>
  </data>
  <data name="ClientDisplayLogoUrl" xml:space="preserve">
    <value>Logo Url</value>
  </data>
  <data name="ClientDisplayName" xml:space="preserve">
    <value>Client Name</value>
  </data>
  <data name="GeneralDisplayAddress1" xml:space="preserve">
    <value>Address Line 1</value>
  </data>
  <data name="GeneralDisplayAddress2" xml:space="preserve">
    <value>Address Line 2</value>
  </data>
  <data name="GeneralDisplayCountry" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="GeneralDisplayCounty" xml:space="preserve">
    <value>County</value>
  </data>
  <data name="GeneralDisplayMobile" xml:space="preserve">
    <value>Mobile Number</value>
  </data>
  <data name="GeneralDisplayPostCode" xml:space="preserve">
    <value>Postcode</value>
  </data>
  <data name="GeneralDisplayTown" xml:space="preserve">
    <value>Town</value>
  </data>
  <data name="GeneralDisplayIsActive" xml:space="preserve">
    <value>Active Status</value>
  </data>
  <data name="ClientDisplaySelect" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="DomainDisplayName" xml:space="preserve">
    <value>Domain</value>
  </data>
  <data name="WebsiteDisplayDescription" xml:space="preserve">
    <value>Site Description</value>
  </data>
  <data name="WebsiteDisplayFavIconUrl" xml:space="preserve">
    <value>Fav icon url</value>
  </data>
  <data name="WebsiteDisplayFriendlyId" xml:space="preserve">
    <value>Website ID</value>
  </data>
  <data name="WebsiteDisplayIsActive" xml:space="preserve">
    <value>Active Status</value>
  </data>
  <data name="WebsiteDisplayName" xml:space="preserve">
    <value>Site Name</value>
  </data>
  <data name="WebsiteDisplayPageTitlePrefix" xml:space="preserve">
    <value>Page title prefix</value>
  </data>
  <data name="WebsiteDisplayPageTitleSuffix" xml:space="preserve">
    <value>Page title suffix</value>
  </data>
  <data name="WebsiteDisplayRootUrl" xml:space="preserve">
    <value>Site Root Url</value>
  </data>
  <data name="WebsiteRequiredFavIconUrl" xml:space="preserve">
    <value>Please select a Fav icon url</value>
  </data>
  <data name="WebsiteRequiredRootUrl" xml:space="preserve">
    <value>Please select a Site Root Url</value>
  </data>
</root>